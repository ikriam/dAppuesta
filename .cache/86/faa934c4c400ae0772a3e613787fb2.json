{"id":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","dependencies":[{"name":"/Users/eduardo/NodeProjects/test/package.json","includedInParent":true,"mtime":1648763396233},{"name":"/Users/eduardo/NodeProjects/test/node_modules/mathjs/package.json","includedInParent":true,"mtime":1648763325155},{"name":"../../utils/factory.js","loc":{"line":1,"column":24,"index":24},"parent":"/Users/eduardo/NodeProjects/test/node_modules/mathjs/lib/esm/function/utils/typeOf.js","resolved":"/Users/eduardo/NodeProjects/test/node_modules/mathjs/lib/esm/utils/factory.js"},{"name":"../../utils/is.js","loc":{"line":2,"column":34,"index":84},"parent":"/Users/eduardo/NodeProjects/test/node_modules/mathjs/lib/esm/function/utils/typeOf.js","resolved":"/Users/eduardo/NodeProjects/test/node_modules/mathjs/lib/esm/utils/is.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTypeOf = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nvar createTypeOf = /* #__PURE__ */(0, _factory.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeOf` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * null                   | `'null'`      | `math.typeOf(null)`\n   * number                 | `'number'`    | `math.typeOf(3.5)`\n   * boolean                | `'boolean'`   | `math.typeOf(true)`\n   * string                 | `'string'`    | `math.typeOf('hello world')`\n   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`\n   * Date                   | `'Date'`      | `math.typeOf(new Date())`\n   * Function               | `'Function'`  | `math.typeOf(function () {})`\n   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`\n   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`\n   * undefined              | `'undefined'` | `math.typeOf(undefined)`\n   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`\n   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`\n   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`\n   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`\n   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`\n   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`\n   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\\nb=3'))`\n   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`\n   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`\n   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`\n   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`\n   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`\n   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`\n   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`\n   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`\n   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`\n   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`\n   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`\n   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`\n   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`\n   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    math.typeOf(3.5)                     // returns 'number'\n   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'\n   *    math.typeOf('hello world')           // returns 'string'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n\n  return typed(name, {\n    any: _is.typeOf\n  });\n});\nexports.createTypeOf = createTypeOf;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":0}},{"name":"name","generated":{"line":12,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":4}},{"generated":{"line":12,"column":8},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":8}},{"generated":{"line":12,"column":11},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":11}},{"generated":{"line":12,"column":19},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":0}},{"name":"dependencies","generated":{"line":13,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":16},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":16}},{"generated":{"line":13,"column":19},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":19}},{"generated":{"line":13,"column":20},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":20}},{"generated":{"line":13,"column":27},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":19}},{"generated":{"line":13,"column":28},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":7}},{"name":"createTypeOf","generated":{"line":14,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":11}},{"generated":{"line":14,"column":16},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23}},{"generated":{"line":14,"column":19},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":26}},{"generated":{"line":14,"column":34},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41}},{"name":"name","generated":{"line":14,"column":56},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":49}},{"generated":{"line":14,"column":60},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41}},{"name":"dependencies","generated":{"line":14,"column":62},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":55}},{"generated":{"line":14,"column":74},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41}},{"name":"_ref","generated":{"line":14,"column":76},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":69}},{"generated":{"line":14,"column":80},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":73}},{"generated":{"line":14,"column":84},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":77}},{"generated":{"line":15,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":6,"column":2}},{"generated":{"line":15,"column":6},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":6,"column":6}},{"name":"typed","generated":{"line":16,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":4}},{"name":"typed","generated":{"line":16,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":4}},{"generated":{"line":17,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":6,"column":6}},{"name":"_ref","generated":{"line":17,"column":6},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":8,"column":6}},{"generated":{"line":17,"column":10},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":6,"column":2}},{"generated":{"line":18,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":10,"column":2}},{"generated":{"line":19,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":12,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":13,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":14,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":16,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":17,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":18,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":20,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":31,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":35,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":36,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":37,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":38,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":39,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":40,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":41,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":42,"column":0}},{"generated":{"line":51,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":43,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":44,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":45,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":46,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":47,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":48,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":49,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":50,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":51,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":52,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":53,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":54,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":55,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":56,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":57,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":58,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":59,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":60,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":61,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":63,"column":0}},{"generated":{"line":72,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":64,"column":0}},{"generated":{"line":73,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":65,"column":0}},{"generated":{"line":74,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":66,"column":0}},{"generated":{"line":75,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":67,"column":0}},{"generated":{"line":77,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":2}},{"name":"typed","generated":{"line":77,"column":9},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":9}},{"generated":{"line":77,"column":14},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":14}},{"name":"name","generated":{"line":77,"column":15},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":15}},{"generated":{"line":77,"column":19},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":14}},{"generated":{"line":77,"column":21},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":21}},{"name":"any","generated":{"line":78,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":69,"column":4}},{"name":"any","generated":{"line":78,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":69,"column":4}},{"generated":{"line":78,"column":7},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":69,"column":7}},{"name":"_typeOf","generated":{"line":78,"column":9},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":69,"column":9}},{"generated":{"line":79,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":21}},{"generated":{"line":79,"column":3},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":14}},{"generated":{"line":79,"column":4},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":68,"column":2}},{"generated":{"line":80,"column":0},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":71,"column":1}},{"generated":{"line":80,"column":1},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41}},{"generated":{"line":80,"column":2},"source":"../node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":7}}],"sources":{"../node_modules/mathjs/lib/esm/function/utils/typeOf.js":"import { factory } from '../../utils/factory.js';\nimport { typeOf as _typeOf } from '../../utils/is.js';\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nexport var createTypeOf = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeOf` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * null                   | `'null'`      | `math.typeOf(null)`\n   * number                 | `'number'`    | `math.typeOf(3.5)`\n   * boolean                | `'boolean'`   | `math.typeOf(true)`\n   * string                 | `'string'`    | `math.typeOf('hello world')`\n   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`\n   * Date                   | `'Date'`      | `math.typeOf(new Date())`\n   * Function               | `'Function'`  | `math.typeOf(function () {})`\n   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`\n   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`\n   * undefined              | `'undefined'` | `math.typeOf(undefined)`\n   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`\n   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`\n   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`\n   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`\n   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`\n   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`\n   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\\nb=3'))`\n   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`\n   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`\n   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`\n   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`\n   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`\n   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`\n   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`\n   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`\n   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`\n   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`\n   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`\n   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`\n   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`\n   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    math.typeOf(3.5)                     // returns 'number'\n   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'\n   *    math.typeOf('hello world')           // returns 'string'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n  return typed(name, {\n    any: _typeOf\n  });\n});"},"lineCount":null}},"error":null,"hash":"52ab7af131ae64ed9fb4be022c0f355c","cacheData":{"env":{}}}